; 6502.cpu -- CPU definition for MOS 6502
;
; Copyright (C) Dieter Baron
;
; The authors can be contacted at <accelerate@tpau.group>
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
;
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
;
; 2. The names of the authors may not be used to endorse or promote
;   products derived from this software without specific prior
;   written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS
; OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
; WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
; DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
; GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
; IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
; OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
; IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.byte_order 12345678

.syntax punctuation: "#" "," "(" ")"

.argument_type byte range: 0, $ff

.argument_type word any

.addressing_mode accumulator {
    notation [
        : a
        :
    ]
}

.addressing_mode implied {
    notation:
}

.addressing_mode immediate {
    notation: #value
    arguments {
        value: byte
    }
    encoding: .opcode, value:1
}

.addressing_mode zero_page {
    notation: address
    arguments {
        address: byte
    }
    encoding: .opcode, address:1
}

.addressing_mode absolute {
    notation: address
    arguments {
        address: word
    }
    encoding: .opcode, address:2
}

.addressing_mode relative {
    notation: address
    arguments {
        address: word
    }
    encoding: .opcode, address - .pc - 2 :-1
}

.addressing_mode absolute_indirect {
    notation: (address)
    arguments {
        address: word
    }
    encoding: .opcode, address:2
}

.addressing_mode zero_page_x_indexed {
    notation: address,x
    arguments {
        address: byte
    }
    encoding: .opcode, address:1
}

.addressing_mode zero_page_y_indexed {
    notation: address,y
    arguments {
        address: byte
    }
    encoding: .opcode, address:1
}

.addressing_mode absolute_x_indexed {
    notation: address,x
    arguments {
        address: word
    }
    encoding: .opcode, address:2
}

.addressing_mode absolute_y_indexed {
    notation: address,y
    arguments {
        address: word
    }
    encoding: .opcode, address:2
}

.addressing_mode x_indexed_indirect {
    notation: (address,x)
    arguments {
        address: byte
    }
    encoding: .opcode, address:1
}

.addressing_mode indirect_y_indexed {
    notation: (address),y
    arguments {
        address: byte
    }
    encoding: .opcode, address:1
}


.instruction adc {
    absolute: $6d
    absolute_x_indexed: $7d
    absolute_y_indexed: $79
    immediate: $69
    indirect_y_indexed: $71
    x_indexed_indirect: $61
    zero_page: $65
    zero_page_x_indexed: $75
}

.instruction and {
    absolute: $2d
    absolute_x_indexed: $3d
    absolute_y_indexed: $39
    immediate: $29
    indirect_y_indexed: $31
    x_indexed_indirect: $21
    zero_page: $25
    zero_page_x_indexed: $35
}

.instruction asl {
    absolute: $0e
    absolute_x_indexed: $1e
    accumulator: $0a
    zero_page: $06
    zero_page_x_indexed: $16
}

.instruction bcc {
    relative: $90
}

.instruction bcs {
    relative: $b0
}

.instruction beq {
    relative: $f0
}

.instruction bit {
    absolute: $2c
    zero_page: $24
}

.instruction bmi {
    relative: $30
}

.instruction bne {
    relative: $d0
}

.instruction bpl {
    relative: $10
}

.instruction brk {
    implied: $00
}

.instruction bvc {
    relative: $50
}

.instruction bvs {
    relative: $70
}

.instruction clc {
    implied: $18
}

.instruction cld {
    implied: $d8
}

.instruction cli {
    implied: $58
}

.instruction clv {
    implied: $b8
}

.instruction cmp {
    absolute: $cd
    absolute_x_indexed: $dd
    absolute_y_indexed: $d9
    immediate: $c9
    indirect_y_indexed: $d1
    x_indexed_indirect: $c1
    zero_page: $c5
    zero_page_x_indexed: $d5
}

.instruction cpx {
    absolute: $ec
    immediate: $e0
    zero_page: $e4
}

.instruction cpy {
    absolute: $cc
    immediate: $c0
    zero_page: $c4
}

.instruction dec {
    absolute: $ce
    absolute_x_indexed: $de
    zero_page: $c6
    zero_page_x_indexed: $d6
}

.instruction dex {
    implied: $ca
}

.instruction dey {
    implied: $88
}

.instruction eor {
    absolute: $4d
    absolute_x_indexed: $5d
    absolute_y_indexed: $59
    immediate: $49
    indirect_y_indexed: $51
    x_indexed_indirect: $41
    zero_page: $45
    zero_page_x_indexed: $55
}

.instruction inc {
    absolute: $ee
    absolute_x_indexed: $fe
    zero_page: $e6
    zero_page_x_indexed: $f6
}

.instruction inx {
    implied: $e8
}

.instruction iny {
    implied: $c8
}

.instruction jmp {
    absolute: $4c
    absolute_indirect: $6c
}

.instruction jsr {
    absolute: $20
}

.instruction lda {
    absolute: $ad
    absolute_x_indexed: $bd
    absolute_y_indexed: $b9
    immediate: $a9
    indirect_y_indexed: $b1
    x_indexed_indirect: $a1
    zero_page: $a5
    zero_page_x_indexed: $b5
}

.instruction ldx {
    absolute: $ae
    absolute_y_indexed: $be
    immediate: $a2
    zero_page: $a6
    zero_page_y_indexed: $b6
}

.instruction ldy {
    absolute: $ac
    absolute_x_indexed: $bc
    immediate: $a0
    zero_page: $a4
    zero_page_x_indexed: $b4
}

.instruction lsr {
    absolute: $4e
    absolute_x_indexed: $5e
    accumulator: $4a
    zero_page: $46
    zero_page_x_indexed: $56
}

.instruction nop {
    implied: $ea
}

.instruction ora {
    absolute: $0d
    absolute_x_indexed: $1d
    absolute_y_indexed: $19
    immediate: $09
    indirect_y_indexed: $11
    x_indexed_indirect: $01
    zero_page: $05
    zero_page_x_indexed: $15
}

.instruction pha {
    implied: $48
}

.instruction php {
    implied: $08
}

.instruction pla {
    implied: $68
}

.instruction plp {
    implied: $28
}

.instruction rol {
    absolute: $2e
    absolute_x_indexed: $3e
    accumulator: $2a
    zero_page: $26
    zero_page_x_indexed: $36
}

.instruction ror {
    absolute: $6e
    absolute_x_indexed: $7e
    accumulator: $6a
    zero_page: $66
    zero_page_x_indexed: $76
}

.instruction rti {
    implied: $40
}

.instruction rts {
    implied: $60
}

.instruction sbc {
    absolute: $ed
    absolute_x_indexed: $fd
    absolute_y_indexed: $f9
    immediate: $e9
    indirect_y_indexed: $f1
    x_indexed_indirect: $e1
    zero_page: $e5
    zero_page_x_indexed: $f5
}

.instruction sec {
    implied: $38
}

.instruction sed {
    implied: $f8
}

.instruction sei {
    implied: $78
}

.instruction sta {
    absolute: $8d
    absolute_x_indexed: $9d
    absolute_y_indexed: $99
    zero_page: $85
    zero_page_x_indexed: $95
    x_indexed_indirect: $81
    indirect_y_indexed: $91
}

.instruction stx {
    absolute: $8e
    zero_page: $86
    zero_page_y_indexed: $96
}

.instruction sty {
    absolute: $8c
    zero_page: $84
    zero_page_x_indexed: $94
}

.instruction tax {
    implied: $aa
}

.instruction tay {
    implied: $a8
}

.instruction tsx {
    implied: $ba
}

.instruction txa {
    implied: $8a
}

.instruction txs {
     implied: $9a
}

.instruction tya {
    implied: $98
}
