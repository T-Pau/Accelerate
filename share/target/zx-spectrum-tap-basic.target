.define ZX_SPECTRUM
.cpu "z80"

.include "zx-spectrum-encoding.inc"
.include "zx-spectrum-tap.inc"

.default .public PROGRAM_NAME = "Program"
.default .public LINE_NUMBER = 10
.default .public INCLUDE_LOADING_SCREEN = .false

.public loading_screen_start = $4000
.public loading_screen_end = $57ff ; XLR8: loading_screen_start + $17ff
basic_start = $5ccb
.default .public program_start = $8000
.default .public program_end = $ffff

.section loading_screen {
    address: loading_screen_start - loading_screen_end
}

.section basic {
    address: basic_start - program_start
}

.segment program {
    address: program_start - program_end
}

.section code {
    segment: program
}

.section data {
    segment: program
}

.section reserved {
    type: reserve_only
    segment: program
}

.section basic

basic .address basic_start .used {
    .data LINE_NUMBER:big_endian(2), line_end - line_start:2
line_start:
    .data "{{clear}}{{val}}\"", program_start - 1:string, "\":"
    .data "{{poke}}{{val}}\"23739\",{{val}}\"111\":"
    .if INCLUDE_LOADING_SCREEN {
        .data "{{load}}\"\"{{screen$}}:"
    }
    .data "{{load}}\"\"{{code}}:{{randomize}}{{usr}}{{val}}\"", start:string, "\"{{enter}}"
line_end:
}

.output {
    tap_file_program PROGRAM_NAME, basic_start, basic_start + .sizeof(basic) -  1, LINE_NUMBER
    .if INCLUDE_LOADING_SCREEN {
        tap_file_code "screen", loading_screen_start, loading_screen_end
    }
    tap_file_code "code", program_start, .data_end
}
